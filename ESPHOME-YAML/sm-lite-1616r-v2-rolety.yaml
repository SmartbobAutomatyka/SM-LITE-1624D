esphome:
  name: sm-lite-1616rv2
  friendly_name: sm-lite-1616r

# PLATFORMA
esp32:
  board: esp32dev
  framework:
    type: arduino

uart:
  rx_pin: 13
  tx_pin: 33
  baud_rate: 2400 #if your energy meter is SDM230M or SDM120M than change the baud_rate: 2400
  stop_bits: 1

# LOGOWANIE
logger:
  level: NONE

# KLUCZ HA - USTAW SWÓJ
api:
  encryption:
    key: "lx4TtB/n88pdbbvTMBPH1jW8sEhtPC2pV3shrE23EzY="
  reboot_timeout: 0s

# KLUCZ OTA - USTAW SWÓJ
ota:
  password: "6d492e327cf49782cc7de2da362196dclx4TtB"

# KONFIGURACJA LAN
ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
 # id:eth
  #clk_mode: GPIO0_IN
  #power_pin: GPIO16
  clk_mode: GPIO17_OUT
  phy_addr: 1
  id: eth
  # STAŁE IP
  manual_ip:
    static_ip: 192.168.18.211
    gateway: 192.168.18.1
    subnet: 255.255.255.0
    dns1 : 8.8.8.8
    dns2 : 8.8.4.4

# KONFIGURACJA I2C 
i2c:
   - id: bus_a
     sda: 5
     scl: 15
     scan: false
     frequency: 400kHz
# KONFIGURACJA MCP23017 x2
mcp23017:
  - id: 'mcp23017_out' 
    address: 0x20     
  - id: 'mcp23017_in'  #inputy
    address: 0x21

text_sensor:
  - platform: template
    name: "ESP32-R01 Uptime"
    id: uptime_human_R01
    icon: mdi:clock-start
  - platform: template
    name: "IP"
    id: ip_address
    entity_category: diagnostic
    icon: "mdi:ip-network"
    lambda: return { id(eth).get_ip_address().str() };
    update_interval: 10s
sensor:
  - platform: bme280
    temperature:
      name: "BME280 Temperature"
      oversampling: 16x
    pressure:
      name: "BME280 Pressure"
    humidity:
      name: "BME280 Humidity"
    address: 0x76
    update_interval: 60s

  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor_R01
    internal: true
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human_R01
            state: !lambda |-
              int seconds = round(id(uptime_sensor_R01).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();
  - platform: uptime
    name: "Uptime Sensor R01"
    id: upt_R01
    internal: true

  # TEMPERATURA PROCESORA
  - platform: internal_temperature
    name: "Temperatura CPU"
    update_interval: 30s

  # CZUJNIK POMIARU TEMPERATURY PCB 1 - USTAW KTÓRE OBWODY MAJĄ BYĆ WYŁĄCZONE W PRZYPADKU PRZEKROCZENIA TEMPERATURY
  - platform: tmp102
    name: "Temperatura PCB 1"
    address: 0x48
    id: temp_1
    update_interval: 15s
    on_value_range:
        - above: 72.0
          then:

            - switch.turn_on: alarm_01
        - below: 70.0
          then:
            - switch.turn_off: alarm_01

  # CZUJNIK POMIARU TEMPERATURY PCB 1 - USTAW KTÓRE OBWODY MAJĄ BYĆ WYŁĄCZONE W PRZYPADKU PRZEKROCZENIA TEMPERATURY
  - platform: tmp102
    name: "Temperatura PCB 2"
    address: 0x49
    id: temp_2
    update_interval: 15s
    on_value_range:
        - above: 72.0
          then:

            - switch.turn_on: alarm_01
        - below: 70.0
          then:
            - switch.turn_off: alarm_01

#USTAWENIA CZCIONEK
font:
- file: 'arial.ttf'
  id: font1
  size: 12

- file: 'materialdesignicons-webfont.ttf'
  id: materialdesignicons
  size: 15
  glyphs: [
      "\U000F0317", # lan
      "\U000F04A2", # signal
      "\U000F05A9", # wifi
      "\U000F048B", # server
      "\U000F0FA9", # clock
      "\U000F050F" # thermometer
      ]

time:
  - platform: homeassistant
    id: homeassistant_time
# USTAWIENIA EKRANU
display:
  - platform: ssd1306_i2c
    model: "SSD1306_128X64"
    lambda: |-
      int seconds = round(id(upt_R01).state);
      int days = seconds / (24 * 3600);
      seconds = seconds % (24 * 3600);
      int hours = seconds / 3600;
      it.print(0, 0, id(materialdesignicons), TextAlign::LEFT, "\U000F0317");
      it.printf(18, 1,id(font1), "%s", id(ip_address).state.c_str());
      it.print(0, 16, id(materialdesignicons), TextAlign::LEFT, "\U000F0FA9");
      it.printf(18,17,id(font1),"%d dni, %02d godzin",days,hours);
      it.print(0, 32, id(materialdesignicons), TextAlign::LEFT, "\U000F048B");
      it.printf(18, 33, id(font1), "SM-LITE-1616R"); 
      it.print(0, 48, id(materialdesignicons), TextAlign::LEFT, "\U000F050F");
      it.printf(18, 49, id(font1), "%.1f°, %.1f°", id(temp_1).state, id(temp_2).state); 
#rolety

cover:
  - platform: time_based
    name: "Roleta_Salon1"
    id: cover1
    open_action:
      - switch.turn_off: relay_02
      - switch.turn_on: relay_01
    open_duration: 32s

    close_action:
      - switch.turn_off: relay_01
      - switch.turn_on: relay_02
    close_duration: 30s

    stop_action:
      - switch.turn_off: relay_01
      - switch.turn_off: relay_02
  - platform: time_based
    name: "Roleta_Salon2"
    id: cover2
    open_action:
      - switch.turn_off: relay_04
      - switch.turn_on: relay_03
    open_duration: 32s

    close_action:
      - switch.turn_off: relay_03
      - switch.turn_on: relay_04
    close_duration: 30s

    stop_action:
      - switch.turn_off: relay_03
      - switch.turn_off: relay_04

  - platform: time_based
    name: "Roleta_Salon3"
    id: cover3
    open_action:
      - switch.turn_off: relay_06
      - switch.turn_on: relay_05
    open_duration: 32s

    close_action:
      - switch.turn_off: relay_05
      - switch.turn_on: relay_06
    close_duration: 30s

    stop_action:
      - switch.turn_off: relay_05
      - switch.turn_off: relay_06
  - platform: time_based
    name: "Roleta_Sypialnia"
    id: cover4
    open_action:
      - switch.turn_off: relay_08
      - switch.turn_on: relay_07
    open_duration: 24s

    close_action:
      - switch.turn_off: relay_07
      - switch.turn_on: relay_08
    close_duration: 22s

    stop_action:
      - switch.turn_off: relay_07
      - switch.turn_off: relay_08
# KONFIGURACJA WEJŚĆ
binary_sensor:
  - platform: gpio
    name: "INPUT-01"
    id: input_01
    pin:
      mcp23xxx: mcp23017_in
      number: 7
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
        then:
        - switch.toggle: relay_01 
  - platform: gpio
    name: "INPUT-02"
    id: input_02
    pin:
      mcp23xxx: mcp23017_in
      number: 6
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
        then:
        - switch.toggle: relay_02 
  - platform: gpio
    name: "INPUT-03"
    id: input_03
    pin:
      mcp23xxx: mcp23017_in
      number: 5
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
       then:
        - switch.toggle: relay_09
  - platform: gpio
    name: "INPUT-04"
    id: input_04
    pin:
      mcp23xxx: mcp23017_in
      number: 4
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
       then:
        - switch.toggle: relay_04
  - platform: gpio
    name: "INPUT-05"
    id: input_05
    pin:
      mcp23xxx: mcp23017_in
      number: 3
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
       then:
        - switch.toggle: relay_05
  - platform: gpio
    name: "INPUT-06"
    id: input_06
    pin:
      mcp23xxx: mcp23017_in
      number: 2
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
       then:
        - switch.toggle: relay_06
  - platform: gpio
    name: "INPUT-07"
    id: input_07
    pin:
      mcp23xxx: mcp23017_in
      number: 1
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
       then:
        - switch.toggle: relay_07
  - platform: gpio
    name: "INPUT-08"
    id: input_08
    pin:
      mcp23xxx: mcp23017_in
      number: 0
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
       then:
        - switch.toggle: relay_08
#Inputy do rolet        
  - platform: gpio
    name: "ROLETA-SYPIALNIA-BTN-UP"
    internal: true
    id: input_09
    pin:
      mcp23xxx: mcp23017_in
      number: 15
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
      then:
        - lambda: |
            if (id(cover4).current_operation == COVER_OPERATION_IDLE) {
              id(cover4).make_call().set_command_open().perform();
            } else {
              id(cover4).make_call().set_command_stop().perform();    
            }       
  - platform: gpio
    name: "ROLETA-SYPIALNIA-BTN-DN"
    internal: true
    id: input_10
    pin:
      mcp23xxx: mcp23017_in
      number: 14
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
      then:
        - lambda: |
            if (id(cover4).current_operation == COVER_OPERATION_IDLE) {
              id(cover4).make_call().set_command_close().perform();
            } else {
              id(cover4).make_call().set_command_stop().perform();    
            }     
  - platform: gpio
    name: "ROLETA-SALON1-BTN-UP"
    internal: true
    id: input_11
    pin:
      mcp23xxx: mcp23017_in
      number: 13
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
      then:
        - lambda: |
            if (id(cover3).current_operation == COVER_OPERATION_IDLE) {
              id(cover3).make_call().set_command_open().perform();
            } else {
              id(cover3).make_call().set_command_stop().perform();    
            }  

  - platform: gpio
    name: "ROLETA-SALON3-BTN-DW"
    internal: true
    id: input_12
    pin:
      mcp23xxx: mcp23017_in
      number: 12
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
      then:
        - lambda: |
            if (id(cover3).current_operation == COVER_OPERATION_IDLE) {
              id(cover3).make_call().set_command_close().perform();
            } else {
              id(cover3).make_call().set_command_stop().perform();    
            } 
  - platform: gpio
    name: "ROLETA-SALON2-BTN-UP"
    internal: true
    id: input_13
    pin:
      mcp23xxx: mcp23017_in
      number: 11
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
      then:
        - lambda: |
            if (id(cover2).current_operation == COVER_OPERATION_IDLE) {
              id(cover2).make_call().set_command_open().perform();
            } else {
              id(cover2).make_call().set_command_stop().perform();    
            }  

  - platform: gpio
    name: "ROLETA-SALON2-BTN-DW"
    internal: true
    id: input_14
    pin:
      mcp23xxx: mcp23017_in
      number: 10
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
      then:
        - lambda: |
            if (id(cover2).current_operation == COVER_OPERATION_IDLE) {
              id(cover2).make_call().set_command_close().perform();
            } else {
              id(cover2).make_call().set_command_stop().perform();    
            } 
  - platform: gpio
    name: "ROLETA-SALON1-BTN-DW"
    internal: true
    id: input_15
    pin:
      mcp23xxx: mcp23017_in
      number: 9
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
      then:
        - lambda: |
            if (id(cover1).current_operation == COVER_OPERATION_IDLE) {
              id(cover1).make_call().set_command_close().perform();
            } else {
              id(cover1).make_call().set_command_stop().perform();    
            }   
  - platform: gpio
    name: "ROLETA-SALON1-BTN-UP"
    internal: true
    id: input_16
    pin:
      mcp23xxx: mcp23017_in
      number: 8
      mode:
        input: true
        pullup: false
      inverted: true
    on_press:
      then:
        - lambda: |
            if (id(cover1).current_operation == COVER_OPERATION_IDLE) {
              id(cover1).make_call().set_command_open().perform();
            } else {
              id(cover1).make_call().set_command_stop().perform();    
            }  

#KONFIGURACJA WYJŚĆ 
switch:
  - platform: gpio
    name: "REALY-01"
    id: relay_01
    interlock: &interlock [relay_01, relay_02]
    restore_mode: ALWAYS_OFF
    internal: true
    pin:
      mcp23xxx: mcp23017_out
      number: 8
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-02"
    id: relay_02
    internal: true
    interlock: *interlock
    pin:
      mcp23xxx: mcp23017_out
      number: 9
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-03"
    id: relay_03
    internal: true
    interlock: &interlock1 [relay_03, relay_04]
    pin:
      mcp23xxx: mcp23017_out
      number: 10
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-04"
    id: relay_04
    internal: true
    interlock: *interlock1
    pin:
      mcp23xxx: mcp23017_out
      number: 11
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-05"
    id: relay_05
    internal: true
    interlock: &interlock2 [relay_05, relay_06]
    pin:
      mcp23xxx: mcp23017_out
      number: 12
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-06"
    id: relay_06
    internal: true
    interlock: *interlock2
    pin:
      mcp23xxx: mcp23017_out
      number: 13
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-07"
    id: relay_07
    internal: true
    interlock: &interlock3 [relay_07, relay_08]    
    pin:
      mcp23xxx: mcp23017_out
      number: 14
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-08"
    id: relay_08
    internal: true
    interlock: *interlock3
    pin:
      mcp23xxx: mcp23017_out
      number: 15
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-09"
    id: relay_09
    pin:
      mcp23xxx: mcp23017_out
      number: 0
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-10"
    id: relay_10
    pin:
      mcp23xxx: mcp23017_out
      number: 1
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-11"
    id: relay_11
    pin:
      mcp23xxx: mcp23017_out
      number: 2
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-12"
    id: relay_12
    pin:
      mcp23xxx: mcp23017_out
      number: 3
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-13"
    id: relay_13
    pin:
      mcp23xxx: mcp23017_out
      number: 4
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-14"
    id: relay_14
    pin:
      mcp23xxx: mcp23017_out
      number: 5
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-15"
    id: relay_15
    pin:
      mcp23xxx: mcp23017_out
      number: 6
      mode: OUTPUT
      inverted: false
  - platform: gpio
    name: "REALY-16"
    id: relay_16
    pin:
      mcp23xxx: mcp23017_out
      number: 7
      mode: OUTPUT
      inverted: false
  - platform: gpio
    pin: GPIO4
    name: "ALARM"
    id: alarm_01
#KONFIGURACJA GUI WEB
web_server:
  port: 80  


